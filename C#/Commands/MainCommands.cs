using System;
using System.Collections.Generic; 
using System.Text;
using System.Threading.Tasks;
using DSharpPlus;
using DSharpPlus.Entities;
using DSharpPlus.CommandsNext;
using DSharpPlus.CommandsNext.Attributes;
using System.Runtime.Serialization.Formatters.Binary;

namespace CSDNDISCORD
{
    class MainCommands : BaseCommandModule
    {
        
        Menu m_mainMenu;
        Menu m_quickPlay;
        Menu m_communityAdventures;
        Menu m_cgAdventures;
        Menu m_searchAdventure;
        Menu m_randomAdventure;
        Menu m_campaign;
        Menu m_adventureBuilder;

        public MainCommands() {
            m_campaign = new Menu("campaign", "play the adventures of {insert character name here} " +
                "in the world of {insert world name here}", ":earth_africa:", new List<Menu>());

            m_cgAdventures = new Menu("computer generated adventures", "play a random adventure that " +
                "will be generated by a computer for you!", ":mechanical_arm:", new List<Menu>());
            m_searchAdventure = new Menu("search an adventure", "search an adventure from the adventure bank.",
                ":mag:", new List<Menu>());
            m_randomAdventure = new Menu("random adventure", "play a random adventure made by the community!",
                ":question:", new List<Menu>());

            m_communityAdventures = new Menu("community adventures", "play an adventures made by the community!",
                ":hand_splayed:", new List<Menu>(new Menu[] {m_randomAdventure, m_searchAdventure}));

            m_quickPlay = new Menu("quick play", "play a casual game solo or with your friends!", ":arrow_right:",
                new List<Menu>(new Menu[] { m_communityAdventures, m_cgAdventures}));

            m_adventureBuilder = new Menu("adventure builder", "create your own adventures using the adventure" +
                "bulder tool!", ":hammer_and_wrench:", new List<Menu>());

            m_mainMenu = new Menu("D&DISCORD", "main menu", ":star:", new List<Menu>(new Menu[] { m_campaign,
            m_quickPlay, m_adventureBuilder}));
        }
        
        [Command("Ping")]
        public async Task Ping(CommandContext ctx)
        {
            DiscordMessage msg = await ctx.Channel.SendMessageAsync("Pong!!");
            await msg.CreateReactionAsync(DiscordEmoji.FromName(Program.bot.Client, ":ping_pong:"));
        }

        [Command("start")]
        public async Task Menu(CommandContext ctx)
        {
            this.m_mainMenu.Send(ctx.Channel, new Player(null));
        }
    }
}
